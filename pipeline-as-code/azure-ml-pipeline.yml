# Continuous Integration (CI) pipeline that orchestrates the training, evaluation, registration, deployment, and testing model.
parameters:
- name: baseName
  type: string
- name: environment
  type: string
- name: location
  type: string
- name: serviceConnection
  type: string
- name: workspacename
  type: string
- name: computename
  type: string
- name: amlenv
  type: string

jobs:
- download: current
  artifact: envsetup
- task: Bash@3
  displayName: 'Install Requirements'
  inputs:
    targetType: filePath
    filePath: '$(Pipeline.Workspace)/envsetup/install_requirements.sh'
    workingDirectory: '$(Pipeline.Workspace)/envsetup'
- job: Declare Variables
  displayName: Declare Vars
  environment: ${{ parameters.environment }}
  variables:
  - group: AzureKeyVaultSecrets
  - name: RESOURCEGROUP_NAME
    value: rg-${{ parameters.baseName }}-${{ parameters.environment }}
  - name: resourceGroupLocation
    value: ${{ parameters.location }}  
  - name: WORKSPACE_NAME
    value: ${{ parameters.baseName }}-${{ parameters.workspacename }}-${{ parameters.environment }}
  - name: CLUSTER_NAME
    value: ${{ parameters.computename }}
  - name: AML_ENVIRONMENT_NAME
    value: ${{ parameters.amlenv }}
  - name: BLOBSTORENAME
    value: train${{ parameters.baseName }}
  - name: DATASETDS
    value: pavfantasyfootball
  - name: CONTNAME
    value: bentleyhack

  strategy:
    steps:
    - download: current
      artifact: pipelinetemplates
    - script: 'python $(Pipeline.Workspace)/pipelinetemplates/build_pipeline.py'
      displayName: 'Pipeline Environment'
      env:
        TENANT_ID: $(sptenant)
        SPN_ID: $(spidentity)
        SPN_PASSWORD: $(spsecret)
        AML_WORKSPACE_NAME: $(WORKSPACE_NAME)
        AML_ENVIRONMENT_NAME: $(AML_ENVIRONMENT_NAME)
        RESOURCE_GROUP: $(RESOURCEGROUP_NAME)
        COMPUTE_NAME: $(CLUSTER_NAME)
        SUBSCRIPTION_ID: $(subscriptionid)
        BLOBSTORENAME: $(BLOBSTORENAME)
        DATASETDS: $(DATASETDS)
        CONTNAME: $(CONTNAME)
        ACCTKEY: $(saKey)

