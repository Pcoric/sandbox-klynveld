parameters:
- name: baseName
  type: string
- name: environment
  type: string
- name: location
  type: string
- name: serviceConnection
  type: string
- name: storageaccount
  type: string
- name: containername
  type: string
- name: hdiBaseName
  type: string
- name: hdiHadoopLogin
  type: string
- name: hdiHadoopPassword
  type: string
- name: hdiVersion
  type: string
- name: clusterWorkerCountMin
  type: number
- name: clusterWorkerCountMax
  type: number
- name: clusterWorkerSize
  type: string
- name: clusterKind
  type: string
- name: sshUserName
  type: string
- name: vnet
  type: string
- name: addressSpaces
  type: string
- name: subnet0
  type: string
- name: subnet0addr
  type: string
- name: subnet1
  type: string
- name: subnet1addr
  type: string

jobs:
- job: BuildMLResources
  displayName: Build SFDC resources
  variables:
  - group: AzureKeyVaultSecrets
  - name: resourceGroupName
    value: rg-${{ parameters.baseName }}-${{ parameters.environment }}
  - name: resourceGroupLocation
    value: ${{ parameters.location }}
  - name: hdiHadoopName
    value: ${{ parameters.hdiBaseName}}${{parameters.baseName}}hdp
  - name: storageAccountLong
    value: ${{ parameters.storageaccount}}.blob.core.windows.net
  - name: saContainer
    value: ${{ parameters.storageaccount }}-${{ parameters.containername }}
  - name: listKeys
    value: "[listKeys('/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Storage/storageAccounts/$(storageaccount)', '2015-05-01-preview').key1]"
  - name: vnetid
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}"
  - name: subnetId
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}/subnets/${{ parameters.subnet0 }}"
  - name: subnetId1
    value: ${{ parameters.vnet }}/${{ parameters.subnet0 }}
  steps:
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Storage Account for HDI data'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/storage-template.json'
      overrideParameters: '-saname ${{ parameters.storageaccount }} -location ${{ parameters.location }}' 
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Virtual Network for HDI & Linux VMs'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/vnet-template.json'
      overrideParameters: '-virtualNetworkName ${{ parameters.vnet}} -addressSpaces ${{ parameters.addressSpaces }} -location ${{ parameters.location }} -subnet0_name ${{ parameters.subnet0 }} -subnet0_addressRange ${{ parameters.subnet0addr }} -subnet1_name ${{ parameters.subnet1 }} -subnet1_addressRange ${{ parameters.subnet1addr }}'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build HDInsight Hadoop Cluster'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/hdinsighthadoop-template.json'
      overrideParameters: '-clusterName $(hdiHadoopName) -clusterLoginUserName ${{ parameters.hdiHadoopLogin }} -clusterLoginPassword ${{parameters.hdiHadoopPassword}} -location ${{ parameters.location }} -clusterVersion ${{ parameters.hdiVersion }} -clusterWorkerCountMin ${{ parameters.clusterWorkerCountMin }} -clusterWorkerCountMax ${{ parameters.clusterWorkerCountMax }} -clusterWorkerNodeSize ${{ parameters.clusterWorkerSize }} -clusterKind ${{ parameters.clusterKind }} -sshUserName ${{parameters.sshUserName }} -sshPassword ${{ parameters.hdiHadoopPassword }} -storageAccountLong $(storageAccountLong) -containerName $(saContainer) -listKeys $(listKeys) -virtualNetworkName ${{ parameters.vnet }} -subnetName $(subnetId1)'

