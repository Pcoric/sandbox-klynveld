parameters:
- name: baseName
  type: string
- name: environment
  type: string
- name: location
  type: string
- name: serviceConnection
  type: string
- name: storageaccount
  type: string
- name: containername
  type: string
- name: hadoopBaseName
  type: string
- name: sparkBaseName
  type: string
- name: hdiHadoopLogin
  type: string
- name: hdiHadoopPassword
  type: string
- name: hdiVersion
  type: string
- name: clusterWorkerCountMin
  type: number
- name: clusterWorkerCountMax
  type: number
- name: clusterWorkerSize
  type: string
- name: clusterKind
  type: string
- name: clusterKind2
  type: string
- name: sshUserName
  type: string
- name: vnet
  type: string
- name: addressSpaces
  type: string
- name: subnet0
  type: string
- name: subnet0addr
  type: string
- name: subnet1
  type: string
- name: subnet1addr
  type: string
- name: subnet2
  type: string
- name: subnet2addr
- name: appnodeName
  type: string
- name: computenodeName
  type: string
- name: nsgBase
  type: string
- name: nicBaseName
  type: string
- name: vmsize
  type: string


jobs:
- job: BuildMLResources
  displayName: Build SFDC resources
  variables:
  - group: AzureKeyVaultSecrets
  - name: resourceGroupName
    value: rg-${{ parameters.baseName }}-${{ parameters.environment }}
  - name: resourceGroupLocation
    value: ${{ parameters.location }}
  - name: hdiHadoopName
    value: ${{ parameters.hadoopBaseName }}${{parameters.baseName}}
  - name: hdiSparkName
    value: ${{ parameters.sparkBaseName }}${{ parameters.baseName}}
  - name: storageAccountLong
    value: ${{ parameters.storageaccount }}.blob.core.windows.net
  - name: saContainer
    value: ${{ parameters.storageaccount }}-${{ parameters.containername }}
  - name: listKeys
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Storage/storageAccounts/${{ parameters.storageaccount }}"
  - name: vnetid
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}"
  - name: subnetId
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}/subnets/${{ parameters.subnet0 }}"
  - name: subnetId1
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}/subnets/${{ parameters.subnet1 }}"
  - name: subnetId2
    value: "/subscriptions/$(subscriptionid)/resourceGroups/$(resourceGroupName)/providers/Microsoft.Network/virtualNetworks/${{ parameters.vnet}}/subnets/${{ parameters.subnet2 }}"
  - name: appnsgname
    value: ${{ parameters.appnodeName }}${{ parameters.nsgBase }}
  - name: appnicname
    value: ${{ parameters.appnodeName }}${{ parameters.nicBaseName}}
  - name: appName
    value: ${{ parameters.baseName }}${{ parameters.appnodeName }}
  - name: appVMComputerName
    value: $(computeName)-comp
  - name: computensgname
    value: ${{ parameters.computenodeName }}${{ parameters.nsgBase }}
  - name: computenicname
    value: ${{ parameters.computenodeName }}${{ parameters.nicBaseName}}
  - name: computeName
    value: ${{ parameters.baseName }}${{ parameters.computenodeName }}
  - name: computeVMComputerName
    value: $(computeName)-comp
  steps:
  #- task: AzureResourceGroupDeployment@2
    #displayName: 'Build Storage Account for HDI data'
    #inputs:
      #azureSubscription: ${{ parameters.serviceConnection }}
      #resourceGroupName: $(resourceGroupName)
      #location: $(resourceGroupLocation)
      #csmFile: 'infra-as-code/arm-templates/storage-template.json'
      #overrideParameters: '-saname ${{ parameters.storageaccount }} -location ${{ parameters.location }}' 
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Virtual Network for HDI & Linux VMs'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/vnet-template.json'
      overrideParameters: '-virtualNetworkName ${{ parameters.vnet}} -addressSpaces ${{ parameters.addressSpaces }} -location ${{ parameters.location }} -subnet0_name ${{ parameters.subnet0 }} -subnet0_addressRange ${{ parameters.subnet0addr }} -subnet1_name ${{ parameters.subnet1 }} -subnet1_addressRange ${{ parameters.subnet1addr }} -subnet2_name ${{ parameters.subnet2 }} -subnet2_addressRange ${{ parameters.subnet2addr }}'
  #- task: AzureResourceGroupDeployment@2
    #displayName: 'Build HDInsight Hadoop Cluster'
    #inputs:
      #azureSubscription: ${{ parameters.serviceConnection }}
      #resourceGroupName: $(resourceGroupName)
      #location: $(resourceGroupLocation)
      #csmFile: 'infra-as-code/arm-templates/hdinsight-template.json'
      #overrideParameters: '-resourceGroupName $(resourceGroupName) -clusterName $(hdiHadoopName) -clusterLoginUserName ${{ parameters.hdiHadoopLogin }} -clusterLoginPassword ${{parameters.hdiHadoopPassword}} -location ${{ parameters.location }} -clusterVersion ${{ parameters.hdiVersion }} -clusterWorkerCountMin ${{ parameters.clusterWorkerCountMin }} -clusterWorkerCountMax ${{ parameters.clusterWorkerCountMax }} -clusterWorkerNodeSize ${{ parameters.clusterWorkerSize }} -clusterKind ${{ parameters.clusterKind }} -sshUserName ${{parameters.sshUserName }} -sshPassword ${{ parameters.hdiHadoopPassword }} -storageAccountLong $(storageAccountLong) -containerName $(saContainer) -listKeys $(listKeys) -virtualNetworkName ${{ parameters.vnet }} -subnetName $(subnetId)'
  #- task: AzureResourceGroupDeployment@2
    #displayName: 'Build HDInsight Spark Cluster'
    #inputs:
      #azureSubscription: ${{ parameters.serviceConnection }}
      #resourceGroupName: $(resourceGroupName)
      #location: $(resourceGroupLocation)
      #csmFile: 'infra-as-code/arm-templates/hdinsight-template.json'
      #overrideParameters: '-resourceGroupName $(resourceGroupName) -clusterName $(hdiSparkName) -clusterLoginUserName ${{ parameters.hdiHadoopLogin }} -clusterLoginPassword ${{parameters.hdiHadoopPassword}} -location ${{ parameters.location }} -clusterVersion ${{ parameters.hdiVersion }} -clusterWorkerCountMin ${{ parameters.clusterWorkerCountMin }} -clusterWorkerCountMax ${{ parameters.clusterWorkerCountMax }} -clusterWorkerNodeSize ${{ parameters.clusterWorkerSize }} -clusterKind ${{ parameters.clusterKind }} -sshUserName ${{parameters.sshUserName }} -sshPassword ${{ parameters.hdiHadoopPassword }} -storageAccountLong $(storageAccountLong) -containerName $(saContainer) -listKeys $(listKeys) -virtualNetworkName ${{ parameters.vnet }} -subnetName $(subnetId1)'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build App Node VM for Zaloni'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/linuxvm-template.json'
      overrideParameters: '-location ${{ parameters.location }} -networkInterfaceName $(appnicname) -networkSecurityGroupName $(appnicname) -subnetName ${{ parameters.subnet1 }} -adminUsername ${{ parameters.hdiHadoopLogin }} -adminPassword ${{parameters.hdiHadoopPassword}} -virtualNetworkId $(vnetid) -virtualMachineName $(appName) -virtualMachineSize ${{ parameters.vmsize }} -virtualMachineComputerName $(appVMComputerName)' 
    
