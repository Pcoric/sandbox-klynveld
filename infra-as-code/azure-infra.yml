parameters:
- name: baseName
  type: string
- name: environment
  type: string
- name: location
  type: string
- name: serviceConnection
  type: string
- name: workspacename
  type: string
- name: computename
  type: string
- name: applicationinsights
  type: string
- name: storageaccount
  type: string
- name: containername
  type: string
- name: containerregistry
  type: string
- name: keyvault
  type: string
- name: vmsize
  type: string
- name: maxnodes
  type: number
- name: minnodes
  type: number

jobs:
- job: BuildMLResources
  displayName: Build ML Resources
  variables:
  - name: resourceGroupName
    value: rg-${{ parameters.baseName }}-${{ parameters.environment }}
  - name: resourceGroupLocation
    value: ${{ parameters.location }}
  - name: storageAccountName
    value: ${{ parameters.baseName }}${{ parameters.storageaccount }}${{ parameters.environment }}
  - name: datastoreName
    value: ${{ parameters.baseName }}${{ parameters.storageaccount }}data${{ parameters.environment }}
  - name: containerRegistryName
    value: ${{ parameters.baseName }}${{ parameters.containerregistry }}${{ parameters.environment }}
  - name: applicationInsightsName
    value: ${{ parameters.baseName }}-${{ parameters.applicationinsights }}-${{ parameters.environment }}
  - name: keyVaultName
    value: ${{ parameters.baseName }}-${{ parameters.keyvault }}-${{ parameters.environment }}
  - name: workspaceName
    value: ${{ parameters.baseName }}-${{ parameters.workspacename }}-${{ parameters.environment }}
  - name: clusterName
    value: ${{ parameters.computename }}
  steps:
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Storage Account for AML workspace'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/storage-template.json'
      overrideParameters: '-saname $(storageAccountName) -location ${{ parameters.location }}'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Storage Account for AML data'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/datastorage-template.json'
      overrideParameters: '-saname $(datastoreName) -location ${{ parameters.location }} -firstContainerName ${{ parameters.containername }}-in  -secondContainerName ${{ parameters.containername }}-out' 
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Container Registry'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/containerregistry-template.json'
      overrideParameters: '-crname $(containerRegistryName) -location ${{ parameters.location }}'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Application Insights'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/appinsights-template.json'
      overrideParameters: '-appInsightsName $(applicationInsightsName) -location ${{ parameters.location }}'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build Key Vault'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/keyvault-template.json'
      overrideParameters: '-kvname $(keyVaultName) -location ${{ parameters.location }}'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build ML Workspace'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/mlworkspace-template.json'
      overrideParameters: '-workspaceName $(workspaceName) -keyVaultName $(keyVaultName) -applicationInsightsName $(applicationInsightsName) -containerRegistryName $(containerRegistryName) -storageAccountName $(storageAccountName)'
  - task: AzureResourceGroupDeployment@2
    displayName: 'Build ML Compute'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      resourceGroupName: $(resourceGroupName)
      location: $(resourceGroupLocation)
      csmFile: 'infra-as-code/arm-templates/mlcompute-template.json'
      overrideParameters: '-workspaceName $(workspaceName) -clusterName $(clusterName) -vmSize ${{ parameters.vmsize }} -minNodeCount ${{ parameters.minnodes }} -maxNodeCount ${{ parameters.maxnodes }}'




#steps:
#- task: UsePythonVersion@0
#  inputs:
#    versionSpec: '3.6'
#    architecture: 'x64'   
#
#- script: | 
#   az login
#   
#  displayName: 'Login to Azure'
#
#- script: |
#   az account set -s $(subscriptionid)
#   
#  displayName: 'Set subscription account'
#
#- script: |
#   az group create -n $(resourcegroup) -l "eastus"
#   
#  displayName: 'Creating Resource Group'
#
#- script: |
#   az ml workspace create --workspace-name $(workspacename) --location "eastus" --resource-group $(resourcegroup) --sku "enterprise" --exist-ok
#   
#  displayName: 'Get or Create Workspace'
#
#- script: |
#   az ml computetarget create amlcompute --max-nodes $(maxnodes) --min-nodes $(minnodes) --name $(computename) --vm-size $(vmsize) --resource-group $(resourcegroup) --workspace-name $(workspacename)
#   
#  displayName: 'Create AML Compute'

